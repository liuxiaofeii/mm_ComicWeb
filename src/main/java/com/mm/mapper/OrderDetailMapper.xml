<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mm.mapper.OrderDetailMapper">
    <!--    实体类属性与数据库的映射-->
    <resultMap id="orderDetailsResultMap" type="com.mm.domain.OrderDetail">
        <result property="orderDetailId" column="orderDetailId"/>
        <result property="bookId" column="bookId"/>
        <result property="orderId" column="orderId"/>
        <result property="orderStatus" column="orderStatus"/>
        <result property="orderNum" column="orderNum"/>
        <result property="orderTotal" column="orderTotal"/>

    </resultMap>


    <resultMap id="orderDetailsDtoResultMap" type="com.mm.domain.OrderDetail">
        <result property="orderDetailId" column="orderDetailId"/>
        <result property="bookId" column="bookId"/>
        <result property="orderId" column="orderId"/>
        <result property="orderStatus" column="orderStatus"/>
        <result property="orderNum" column="orderNum"/>
        <result property="orderTotal" column="orderTotal"/>
        <association property="book" column="bookId" select="com.mm.mapper.BookMapper.load" />

    </resultMap>

<!--    sql代码片段-->
    <sql id="OrderDetail_field">
        orderDetailId,bookId,orderId,orderStatus,orderNum,orderTotal
    </sql>
    <sql id="OrderDetail_insert_field">
        orderDetailId,bookId,orderId,orderStatus,orderNum,orderTotal
    </sql>
    <sql id="OrderDetail_insert">
        #{bookId},#{orderId},#{orderStatus},#{orderNum},#{orderTotal}
    </sql>
    <!--     实体类需要用到的if   -->
    <sql id="OrderDetail_where">
        <if test="orderDetailId!=null">
            and orderDetailId=#{orderDetailId}
        </if>
        <if test="bookId!=null">
            and bookId=#{bookId}
        </if>
        <if test="orderId!=null">
            and orderId=#{orderId}
        </if>

        <if test="orderStatus!=null">
            and orderStatus=#{orderStatus}
        </if>
        <if test="orderNum!=null">
            and orderNum=#{orderNum}
        </if>
        <if test="orderTotal!=null">
            and orderTotal=#{orderTotal}
        </if>

    </sql>
    <!--    更新的条件-->
    <sql id="update_f">

        <if test="bookId!=null">
            bookId=#{bookId},
        </if>
        <if test="orderId!=null">
            orderId=#{orderId},
        </if>

        <if test="orderStatus!=null">
            orderStatus=#{orderStatus},
        </if>
        <if test="orderNum!=null">
            orderNum=#{orderNum},
        </if>
        <if test="orderTotal!=null">
            orderTotal=#{orderTotal},
        </if>

    </sql>




<!--    /**-->
<!--    * 增删改查-->
<!--    */-->
<!--    //插入一个对象，返回值是int-->
<!--    int insert(T entiry);-->
    <insert id="insert" parameterType="OrderDetail">
        insert into orderDetails(bookId,orderId,orderStatus,orderNum,orderTotal) values(#{bookId},#{orderId},#{orderStatus},#{orderNum},#{orderTotal})
    </insert>

<!--    /******删除******/-->
<!--    //通过id删除-->
<!--    void deleteById(Serializable id);-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from orderDetails
        where orderDetailId=#{orderDetailId}
    </delete>
<!--    //通过实体类删除-->
<!--    void deleteByEntiry(T entiry);-->
    <delete id="deleteByEntiry" parameterType="OrderDetail">
        delete from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </delete>

<!--    //通过map删除-->
<!--    void deleteByMap(Map<String,Object> params);-->
    <delete id="deleteByMap" parameterType="map">
        delete from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </delete>

<!--    /******修改******/-->
<!--    //通过实体类修改-->
<!--    void update(T entiry);-->
    <update id="update" parameterType="OrderDetail">
        update orderDetails
        <set>
            <include refid="update_f"></include>
        </set>
        <where>
            orderDetailId=#{orderDetailId}
        </where>
<!--        <where>-->
<!--            <include refid="OrderDetail_where"></include>-->
<!--        </where>-->
    </update>

<!--    //通过id进行修改-->
<!--    void updateById(T entiry);-->
    <update id="updateById" parameterType="OrderDetail">
        update orderDetails
        <set>
            <include refid="update_f"></include>
        </set>
        where orderDetailId=#{orderDetailId}
    </update>

<!--    /******查询******/-->
<!--    //根据参数查询-->
<!--    List<T> selectByMap(Map<String,Object> params);-->
    <select id="selectByMap" resultMap="orderDetailsResultMap" parameterType="map">
        select * from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </select>

<!--    //根据实体查询-->
<!--    List<T> selectByEntiry(T entiry);-->
    <select id="selectByEntiry" resultMap="orderDetailsResultMap" parameterType="OrderDetail">
        select * from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </select>

<!--    //列出所有-->
<!--    List<T> listAll();-->
    <select id="listAll" resultMap="orderDetailsResultMap">
        select <include refid="OrderDetail_field"/>
        from orderDetails
    </select>
    <select id="findAll" resultMap="orderDetailsDtoResultMap">
        select <include refid="OrderDetail_field"/>
        from orderDetails
    </select>

<!--    /******查询******/-->
<!--    //根据主键获取实体-->
    <select id="load" resultMap="orderDetailsResultMap" parameterType="java.lang.Integer">
        select * from orderDetails
        where orderDetailId=#{orderDetailId}
    </select>

<!--    T getEntiryById(Serializable id);-->
    <select id="getEntiryById" resultMap="orderDetailsResultMap" parameterType="java.lang.Integer">
        select * from orderDetails
        where orderDetailId=#{orderDetailId}
    </select>

    <select id="getListById" resultMap="orderDetailsDtoResultMap" parameterType="java.lang.Integer">
        select * from orderDetails
        where orderId=#{orderId}
    </select>

<!--    根据主键获取实体：select实体类型-->
    <!--    T getEntiryById(Serializable id);-->
    <select id="getEntiryById2" resultMap="orderDetailsResultMap">
        select orderDetailId,bookId,orderDetails.orderId,orderStatus,orderNum,orderTotal,userName from orderDetails,users
        where orderDetails.orderId=users.orderId
    </select>


<!--    //根据map获取实体&#45;&#45;不分页-->
<!--    T getEntiryByMap(Map<String,Object> params);-->
    <select id="getEntiryByMap" resultMap="orderDetailsResultMap" parameterType="map">
        select * from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </select>

<!--    //根据实体获取实体&#45;&#45;不分页-->
<!--    T getEntiryByEntiry(T entiry);-->
    <select id="getEntiryByEntiry" resultMap="orderDetailsResultMap" parameterType="OrderDetail">
        select * from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </select>

<!--    //根据map获取实体&#45;&#45;分页-->
<!--    T getEntiryByMapPage(Map<String,Object> params);-->
    <select id="getEntiryByMapPage" resultMap="orderDetailsResultMap" parameterType="map">
        select * from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </select>

<!--    //根据实体获取实体&#45;&#45;分页-->
<!--    T getEntiryByEntiryPage(T entiry);-->
    <select id="getEntiryByEntiryPage" resultMap="orderDetailsResultMap" parameterType="OrderDetail">
        select * from orderDetails
        <where>
            <include refid="OrderDetail_where"></include>
        </where>
    </select>
<!--    /******批量******/-->
<!--    //批量增加-->
<!--    int insertBatch(List<T> list);-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into orderDetails
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.orderDetailId},#{item.bookId},#{item.orderId},#{item.orderStatus},#{item.orderNum},#{item.orderTotal}
        </foreach>
    </insert>
<!--    //批量修改 通过id-->
<!--    void updateBatch(List<T> list);-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update orderDetails
            <set>
                <if test="item.bookId!=null">
                    bookId=#{item.bookId},
                </if>
                <if test="item.orderId!=null">
                    orderId=#{item.orderId},
                </if>
                <if test="item.orderStatus!=null">
                    orderStatus=#{item.orderStatus},
                </if>
                <if test="item.orderNum!=null">
                    orderNum=#{item.orderNum},
                </if>
                <if test="item.orderTotal!=null">
                    orderTotal=#{item.orderTotal},
                </if>


            </set>
            <where>
                <if test="item.orderDetailId!=null">
                    orderDetailId=#{item.orderDetailId}
                </if>
            </where>
        </foreach>
    </update>

<!--    /******通过sql******/-->
<!--    //通过执行sql返回map-->
<!--    Map<String,Object> getMapBySql(@Param("sql")String sql);-->
    <select id="getMapBySql" resultMap="orderDetailsResultMap">
        ${sql}
    </select>

<!--    //通过执行sql返回Entiry-->
<!--    T getEntiryBySql(@Param("sql")String sql);-->
    <select id="getEntiryBySql" resultMap="orderDetailsResultMap">
        ${sql}
    </select>

    <select id="getListEntiryBySql" resultMap="orderDetailsDtoResultMap">
        ${sql}
    </select>

<!--    //执行sql返回对象，分页-->
<!--    T getEntiryBySqlPage(@Param("sql")String sql);-->
    <select id="getEntiryBySqlPage" resultMap="orderDetailsResultMap">
        ${sql}
    </select>


<!--    //通过sql修改-->
<!--    void updateBySql(@Param("sql")String sql);-->
    <update id="updateBySql">
        ${sql}
    </update>

<!--    //通过sql删除-->
<!--    void deleteBySql(@Param("sql")String sql);-->
    <delete id="deleteBySql">
        ${sql}
    </delete>


</mapper>